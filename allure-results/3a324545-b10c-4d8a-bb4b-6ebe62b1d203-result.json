{"name": "test_run[test_case5]", "status": "failed", "statusDetails": {"message": "Failed: ❌ Test 'BFV3' failed.", "trace": "test_case = {'body_type': 'SALOON', 'market_code': 'AT/de', 'model_code': 'V295', 'model_name': 'EQE', ...}\nscreenshot_dir = 'C:\\\\Python\\\\QA App Allure\\\\QA-App-Allure\\\\Tests'\n\n    @pytest.mark.parametrize(\"test_case\", all_test_cases)\n    def test_run(test_case, screenshot_dir):\n        \"\"\"\n        Runs a test for each test case, either manually defined or dynamically fetched.\n        \"\"\"\n        test_name = test_case['test_name']\n        market_code = test_case.get('market_code', 'BE/nl')\n        model_code = test_case.get('model_code', None)\n        model_name = test_case.get('model_name', None)\n        body_type = test_case.get('body_type', None)\n        urls = test_case.get('urls', {})\n    \n        # Log test case details\n        logging.info(f\"Running test case: {json.dumps(test_case, indent=2)}\")\n    \n        # Validate URLs\n        if not urls or 'HOME_PAGE' not in urls or not urls['HOME_PAGE']:\n            logging.error(f\"❌ Missing HOME_PAGE URL for test '{test_name}' (market: {market_code}, model: {model_code}).\")\n            allure.attach(f\"❌ Missing HOME_PAGE URL for test '{test_name}' (market: {market_code}, model: {model_code}).\")\n            return\n    \n    \n        # Generar ID único y consistente para Allure\n        uid_raw = f\"{test_name}_{market_code}_{model_code or 'unknown'}\"\n        uid_hashed = hashlib.md5(uid_raw.encode()).hexdigest()\n        allure.dynamic.id(uid_hashed)\n    \n        # Define browser options and create driver\n        options = build_chrome_options()\n        driver = create_driver(options)\n    \n        try:\n            # Set Allure suite hierarchy\n            allure.dynamic.parent_suite(f\"{market_code}\")  # Parent Suite\n            allure.dynamic.suite(f\"{test_name}\")  # Suite\n            allure.dynamic.sub_suite(f\"{model_code or 'N/A'} - {model_name or 'N/A'} ({body_type or 'N/A'})\")  # Sub-Suite\n    \n            # Add dynamic tags\n            allure.dynamic.tag(test_name)\n            allure.dynamic.tag(market_code)\n            if model_code:\n                allure.dynamic.tag(model_code)\n            if body_type:\n                allure.dynamic.tag(body_type)\n            if model_name:\n                allure.dynamic.tag(model_name)\n    \n            # Attach URLs to Allure\n            allure.attach(\n                json.dumps(urls, indent=2),\n                name=f\"URLs for {model_name or 'N/A'} ({body_type or 'N/A'})\",\n                attachment_type=allure.attachment_type.JSON\n            )\n    \n            # Extract base test name\n            base_test_name = test_name.split(\" - \")[0]\n    \n            # Run the test logic for the current model\n            try:\n                api_and_xhr = create_api_and_xhr(driver)\n                if api_and_xhr is None or api_and_xhr[1] is None:\n                    logging.error(\"❌ Failed to initialize API and XHR capturer.\")\n                    allure.attach(\"❌ Failed to initialize API and XHR capturer.\", name=\"Initialization Error\", attachment_type=allure.attachment_type.TEXT)\n                    return\n                if base_test_name in test_mapping:\n>                   run_test(driver, base_test_name, market_code, model_code, model_name, body_type, 1, urls, api_and_xhr, screenshot_dir)\n\nQAAppAllure.py:293: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0b8caa4373ed75725828cb458385b715\")>\ntest_name = 'BFV3', market_code = 'AT/de', model_code = 'V295'\nmodel_name = 'EQE', body_type = 'SALOON', attempt = 1\nurls = {'BODY_TYPE': 'SALOON', 'CONFIGURATOR': 'https://www.mercedes-benz.at/passengercars/mercedes-benz-cars/car-configurato...ization/CCci/AT/de/EQE-KLASSE/LIMOUSINE_LANG', 'HOME_PAGE': 'https://www.mercedes-benz.at/', 'MODEL_CODE': 'V295', ...}\napi_and_xhr = (<App.vehicle_api.VehicleAPI object at 0x000001EDEB889350>, <App.XHRResponseCapturer.XHRResponseCapturer object at 0x000001EDEB8BE0D0>)\nscreenshot_dir = 'C:\\\\Python\\\\QA App Allure\\\\QA-App-Allure\\\\Tests'\n\n    def run_test(driver, test_name, market_code, model_code, model_name, body_type, attempt, urls, api_and_xhr, screenshot_dir):\n        vehicle_api, xhr_capturer = api_and_xhr\n        test_success = False\n    \n        if not urls or 'HOME_PAGE' not in urls or not urls['HOME_PAGE']:\n            allure.attach(f\"❌ Could not fetch valid URLs for test '{test_name}' (market: {market_code}, model: {model_code})\")\n            pytest.fail(f\"Missing HOME_PAGE URL for test '{test_name}'\")\n    \n        allure.step(f\"🌐 Fetched URLs from API for test '{test_name}':\\n\"\n                    f\"Model Name: {urls.get('MODEL_NAME', 'N/A')}\\n\"\n                    f\"Body Type: {urls.get('BODY_TYPE', 'N/A')}\\n\"\n                    f\"URLs:\\n{json.dumps(urls, indent=2)}\")\n    \n        # BFV Logic\n        if 'CONFIGURATOR' not in urls or not urls['CONFIGURATOR']:\n            if test_name in [\"BFV1\", \"BFV2\", \"BFV3\", \"Last Configuration Started\", \"Last Configuration Completed\"]:\n                message = f\"❌ Skipping test '{test_name}' due to lack of CONFIGURATOR URL.\"\n                logging.warning(message)\n                allure.dynamic.description(message)\n                pytest.skip(message)\n    \n        if 'ONLINE_SHOP' not in urls or not urls['ONLINE_SHOP']:\n            if test_name in [\"BFV2\", \"BFV3\", \"Last Seen PDP\", \"Last Seen SRP\"]:\n                message = f\"❌ Skipping test '{test_name}' due to lack of ONLINE_SHOP URL.\"\n                logging.warning(message)\n                allure.dynamic.description(message)\n                pytest.skip(message)\n    \n        if 'TEST_DRIVE' not in urls or not urls['TEST_DRIVE']:\n            if test_name == \"BFV3\":\n                message = f\"❌ Skipping test '{test_name}' due to lack of TEST_DRIVE URL.\"\n                logging.warning(message)\n                allure.dynamic.description(message)\n                pytest.skip(message)\n    \n        try:\n            driver.get(urls['HOME_PAGE'])\n            WebDriverWait(driver, 15).until(lambda d: d.execute_script(\"return document.readyState\") == \"complete\")\n            logging.info(f\"🌍 Navigated to: {urls['HOME_PAGE']}\")\n        except Exception as e:\n            logging.error(f\"❌ Error navigating to HOME_PAGE: {e}\")\n            pytest.fail(f\"Error navigating to HOME_PAGE: {e}\")\n    \n    \n    \n        try:\n            WebDriverWait(driver, 15).until(\n                EC.presence_of_element_located((By.CSS_SELECTOR, \"cmm-cookie-banner\"))\n            )\n            time.sleep(2)\n            logging.info(\"✅ Cookie banner detected.\")\n            driver.execute_script(\"\"\"\n                document.querySelector(\"cmm-cookie-banner\").shadowRoot.querySelector(\"wb7-button.button--accept-all\").click();\n            \"\"\")\n            allure.step(\"✅ Clicked on accept cookies.\")\n        except Exception as ex:\n            allure.attach(\"❌ Cookie banner not found or already accepted.\")\n    \n        # Execute test\n        if test_name in test_mapping:\n            test_instance = test_mapping[test_name](driver, urls)\n            test_instance.run()\n            allure.step(f\"✅ {test_name} test completed.\")\n            time.sleep(4)\n    \n            test_success = verify_personalization_and_capture(\n                driver, test_name, model_name, body_type, attempt, screenshot_dir,\n                test_success, xhr_capturer, urls\n            )\n    \n        if not test_success:\n            failure_message = f\"❌ Test '{test_name}' failed.\"\n            logging.error(failure_message)\n            allure.attach(failure_message, name=\"Test Failure\", attachment_type=allure.attachment_type.TEXT)\n>           pytest.fail(failure_message)\nE           Failed: ❌ Test 'BFV3' failed.\n\nQAAppAllure.py:176: Failed"}, "description": "\nRuns a test for each test case, either manually defined or dynamically fetched.\n", "steps": [{"name": "Setting up stealth mode for the browser", "status": "passed", "start": 1745842509142, "stop": 1745842509243}, {"name": "Enabling network logging", "status": "passed", "start": 1745842509243, "stop": 1745842509249}, {"name": "Perform BFV3 Test Logic", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#cc-app-container-main > div.cc-app-container__main-frame.cc-grid-container > div.cc-app-container__navigation.ng-star-inserted > cc-navigation > nav > div > ul > li:nth-child(3) > ccwb-text > a\"}\n  (Session info: chrome=135.0.7049.115); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6565EEFA5+77893]\n\tGetHandleVerifier [0x00007FF6565EF000+77984]\n\t(No symbol) [0x00007FF6563B91BA]\n\t(No symbol) [0x00007FF65640F16D]\n\t(No symbol) [0x00007FF65640F45C]\n\t(No symbol) [0x00007FF656401B5C]\n\t(No symbol) [0x00007FF65643716F]\n\t(No symbol) [0x00007FF6564019E6]\n\t(No symbol) [0x00007FF656437340]\n\t(No symbol) [0x00007FF65645F07F]\n\t(No symbol) [0x00007FF656436F03]\n\t(No symbol) [0x00007FF656400328]\n\t(No symbol) [0x00007FF656401093]\n\tGetHandleVerifier [0x00007FF6568A7B6D+2931725]\n\tGetHandleVerifier [0x00007FF6568A2132+2908626]\n\tGetHandleVerifier [0x00007FF6568C00F3+3031443]\n\tGetHandleVerifier [0x00007FF6566091EA+184970]\n\tGetHandleVerifier [0x00007FF65661086F+215311]\n\tGetHandleVerifier [0x00007FF6565F6EC4+110436]\n\tGetHandleVerifier [0x00007FF6565F7072+110866]\n\tGetHandleVerifier [0x00007FF6565DD479+5401]\n\t(No symbol) [0x00007FFD5E03259D]\n\tRtlUserThreadStart [0x00007FFD5FE6AF38+40]\n\n", "trace": "  File \"C:\\Users\\luis.sepulveda\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Python\\QA App Allure\\QA-App-Allure\\TestsCodes\\test_bfv3.py\", line 79, in perform_bfv3_test\n    main_frame = shadow_root.find_element(By.CSS_SELECTOR, '#cc-app-container-main > div.cc-app-container__main-frame.cc-grid-container > div.cc-app-container__navigation.ng-star-inserted > cc-navigation > nav > div > ul > li:nth-child(3) > ccwb-text > a')\n  File \"C:\\Users\\luis.sepulveda\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\shadowroot.py\", line 79, in find_element\n    return self._execute(Command.FIND_ELEMENT_FROM_SHADOW_ROOT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\luis.sepulveda\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\shadowroot.py\", line 133, in _execute\n    return self.session.execute(command, params)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\luis.sepulveda\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\luis.sepulveda\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "🌍 Navigated to: https://www.mercedes-benz.at/passengercars/models/saloon/eqe/overview.html", "status": "passed", "start": 1745842560571, "stop": 1745842580799}, {"name": "🌍 Navigated to: https://www.mercedes-benz.at/passengercars/mercedes-benz-cars/car-configurator.html/motorization/CCci/AT/de/EQE-KLASSE/LIMOUSINE_LANG", "status": "passed", "start": 1745842580800, "stop": 1745842590857}, {"name": "✅ Executed actions in configurator", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#cc-app-container-main > div.cc-app-container__main-frame.cc-grid-container > div.cc-app-container__navigation.ng-star-inserted > cc-navigation > nav > div > ul > li:nth-child(3) > ccwb-text > a\"}\n  (Session info: chrome=135.0.7049.115); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6565EEFA5+77893]\n\tGetHandleVerifier [0x00007FF6565EF000+77984]\n\t(No symbol) [0x00007FF6563B91BA]\n\t(No symbol) [0x00007FF65640F16D]\n\t(No symbol) [0x00007FF65640F45C]\n\t(No symbol) [0x00007FF656401B5C]\n\t(No symbol) [0x00007FF65643716F]\n\t(No symbol) [0x00007FF6564019E6]\n\t(No symbol) [0x00007FF656437340]\n\t(No symbol) [0x00007FF65645F07F]\n\t(No symbol) [0x00007FF656436F03]\n\t(No symbol) [0x00007FF656400328]\n\t(No symbol) [0x00007FF656401093]\n\tGetHandleVerifier [0x00007FF6568A7B6D+2931725]\n\tGetHandleVerifier [0x00007FF6568A2132+2908626]\n\tGetHandleVerifier [0x00007FF6568C00F3+3031443]\n\tGetHandleVerifier [0x00007FF6566091EA+184970]\n\tGetHandleVerifier [0x00007FF65661086F+215311]\n\tGetHandleVerifier [0x00007FF6565F6EC4+110436]\n\tGetHandleVerifier [0x00007FF6565F7072+110866]\n\tGetHandleVerifier [0x00007FF6565DD479+5401]\n\t(No symbol) [0x00007FFD5E03259D]\n\tRtlUserThreadStart [0x00007FFD5FE6AF38+40]\n\n", "trace": "  File \"C:\\Python\\QA App Allure\\QA-App-Allure\\TestsCodes\\test_bfv3.py\", line 79, in perform_bfv3_test\n    main_frame = shadow_root.find_element(By.CSS_SELECTOR, '#cc-app-container-main > div.cc-app-container__main-frame.cc-grid-container > div.cc-app-container__navigation.ng-star-inserted > cc-navigation > nav > div > ul > li:nth-child(3) > ccwb-text > a')\n  File \"C:\\Users\\luis.sepulveda\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\shadowroot.py\", line 79, in find_element\n    return self._execute(Command.FIND_ELEMENT_FROM_SHADOW_ROOT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\luis.sepulveda\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\shadowroot.py\", line 133, in _execute\n    return self.session.execute(command, params)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\luis.sepulveda\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\luis.sepulveda\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1745842590857, "stop": 1745842593349}], "start": 1745842526121, "stop": 1745842593358}, {"name": "Perform BFV3 Test Logic", "status": "passed", "steps": [{"name": "🌍 Navigated to: https://www.mercedes-benz.at/passengercars/models/saloon/eqe/overview.html", "status": "passed", "start": 1745842605391, "stop": 1745842612556}, {"name": "🌍 Navigated to: https://www.mercedes-benz.at/passengercars/mercedes-benz-cars/car-configurator.html/motorization/CCci/AT/de/EQE-KLASSE/LIMOUSINE_LANG", "status": "passed", "start": 1745842612556, "stop": 1745842618065}, {"name": "✅ Executed actions in configurator", "status": "passed", "start": 1745842618065, "stop": 1745842628554}, {"name": "🌍 Navigated back to: https://www.mercedes-benz.at/", "status": "passed", "start": 1745842628554, "stop": 1745842647371}], "start": 1745842593364, "stop": 1745842647371}, {"name": "🔍 Checking userGroup in XHR responses...", "status": "passed", "steps": [{"name": "Setting campaign name substring for test: BFV3", "status": "passed", "attachments": [{"name": "Info", "source": "3ae0e435-fd74-4075-ad1e-2551c8525141-attachment.txt", "type": "text/plain"}], "start": 1745842651373, "stop": 1745842651379}, {"name": "Capturing XHR responses", "status": "passed", "attachments": [{"name": "Filtered Campaign Response from https://daimleragemea.germany-2.evergage.com/api2/event/mb_austria_prod?event=eyJhY3Rpb24iOiJIb21lIFBhZ2UiLCJpdGVtQWN0aW9uIjpudWxsLCJzb3VyY2UiOnsicGFnZVR5cGUiOiJob21lIiwibG9jYWxlIjoiZGVfQVQiLCJjb250ZW50Wm9uZXMiOltdLCJ1cmwiOiJodHRwczovL3d3dy5tZXJjZWRlcy1iZW56LmF0LyIsInVybFJlZmVycmVyIjoiIiwiY2hhbm5lbCI6IldlYiIsImJlYWNvblZlcnNpb24iOjE2LCJjb25maWdWZXJzaW9uIjoiNzEifSwiZmxhZ3MiOnsicGFnZVZpZXciOnRydWV9LCJ1c2VyIjp7ImF0dHJpYnV0ZXMiOnsiZ2FDbGllbnRJRCI6Ijk2NzMwNjQwNi4xNzQ1ODQyNTI2In0sImFub25JZCI6IjI1MDMyOTgyNTZlOTk0YzkifSwicGVyZm9ybWFuY2UiOnt9LCJkZWJ1ZyI6eyJleHBsYW5hdGlvbnMiOnRydWV9LCJjYXRhbG9nIjp7fSwiY29uc2VudHMiOltdLCJhY2NvdW50Ijp7fSwiX3Rvb2xzRXZlbnRMaW5rSWQiOiIwMTk4MzEzNDQzMTkyODU2ODIifQ%3D%3D", "source": "0f95fcaf-2560-4cb3-963c-2ede3662d895-attachment.json", "type": "application/json"}], "start": 1745842651379, "stop": 1745842662579}, {"name": "✅ Campaign 'best-fitting-vehicle | all models | home | simple-teaser and stage' has userGroup: Default and experienceName: Target Group.", "status": "passed", "start": 1745842662636, "stop": 1745842662637}], "start": 1745842651373, "stop": 1745842662637}, {"name": "🔍 Verifying personalized image...", "status": "passed", "steps": [{"name": "❌ Image not found in the specified selector. Error: Message: \n", "status": "passed", "attachments": [{"name": "Expected Image Source", "source": "bb003694-5c40-4622-a3c6-1fffa7c1a930-attachment.txt", "type": "text/plain"}, {"name": "Image Verification Error", "source": "4b70aaa0-30ef-408b-ae12-9b297c4e0031-attachment.txt", "type": "text/plain"}], "start": 1745842672836, "stop": 1745842672847}], "start": 1745842662637, "stop": 1745842672847}, {"name": "🔍 Debugging campaign images...", "status": "passed", "attachments": [{"name": "Campaign Images", "source": "446ad197-db1c-4754-9b66-010ef469d40a-attachment.txt", "type": "text/plain"}], "start": 1745842672847, "stop": 1745842672956}, {"name": "📜 Scrolling to specific elements and capturing screenshot", "status": "passed", "attachments": [{"name": "Scroll Info", "source": "fbd249ce-67da-4e24-9bc9-36c33dd37e45-attachment.txt", "type": "text/plain"}], "start": 1745842672956, "stop": 1745842676102}, {"name": "✅ Screenshot captured and saved", "status": "passed", "attachments": [{"name": "Final Screenshot", "source": "300ce174-beb0-4fd4-bfde-c72e867b74e4-attachment.png", "type": "image/png"}], "start": 1745842678132, "stop": 1745842678156}], "attachments": [{"name": "URLs for EQE (SALOON)", "source": "bb9a4165-f707-47fa-9e74-4c6650846a93-attachment.json", "type": "application/json"}, {"name": "Test Failure", "source": "d03c480f-dca7-47ea-bf65-950ad72af1ee-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "f8fd8bd6-e41e-45ce-b23d-17e1db77cce5-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_case", "value": "{'test_name': 'BFV3', 'market_code': 'AT/de', 'model_code': 'V295', 'model_name': 'EQE', 'body_type': 'SALOON', 'urls': {'MODEL_CODE': 'V295', 'PRODUCT_PAGE': 'https://www.mercedes-benz.at/passengercars/models/saloon/eqe/overview.html', 'CONFIGURATOR': 'https://www.mercedes-benz.at/passengercars/mercedes-benz-cars/car-configurator.html/motorization/CCci/AT/de/EQE-KLASSE/LIMOUSINE_LANG', 'ONLINE_SHOP': 'https://www.mercedes-benz.at/passengercars/buy/new-car/search-results.html/vehicleCategory-new-passenger-cars/brand-Mercedes-Benz/modelIdentifier-EQE/?emhsortType=price-asc&emhbodyType=LIMOUSINE&emhfuelType=ELECTRIC', 'TEST_DRIVE': 'https://www.mercedes-benz.at/passengercars/mercedes-benz-cars/online-testdrive.html#/dealer?context=OWPC&modelSeries=V295&modelType=ALL', 'HOME_PAGE': 'https://www.mercedes-benz.at/', 'BODY_TYPE': 'SALOON', 'MODEL_NAME': 'EQE'}}"}], "start": 1745842490934, "stop": 1745842732030, "uuid": "a5e84a1e-aedb-48fc-8b6d-e466e061f145", "historyId": "947a95b954ae826930836c12b3d94eb6", "testCaseId": "30c1adb94d6468239eadaa98f3cf79c5", "fullName": "QAAppAllure#test_run", "labels": [{"name": "as_id", "value": "62b5205748bcccbca2ebffc8cd45aeb7"}, {"name": "parentSuite", "value": "AT/de"}, {"name": "suite", "value": "BFV3"}, {"name": "subSuite", "value": "V295 - EQE (SALOON)"}, {"name": "tag", "value": "BFV3"}, {"name": "tag", "value": "AT/de"}, {"name": "tag", "value": "V295"}, {"name": "tag", "value": "SALOON"}, {"name": "tag", "value": "EQE"}, {"name": "host", "value": "DE3SMDW0327562T"}, {"name": "thread", "value": "24804-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "QAAppAllure"}]}