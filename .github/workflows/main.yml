name: Main Event Workflow ‚Äî DEV Environment

on:
  push:
    branches:
      - main
      - parallel-testing
  workflow_dispatch:

env:
  TEST_EXECUTION_ENV: dev

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # üì• Checkout c√≥digo
      - name: Checkout repository
        uses: actions/checkout@v4

      # üõ†Ô∏è Set up Python + install deps
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Install Poetry and dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry add pytest-rerunfailures
          poetry install --no-root

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)/App" >> $GITHUB_ENV

      # üì• Descargar previous allure-results artifact (historial)
      - name: Download previous allure-results artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          name: allure-results
          workflow: Main Event Workflow ‚Äî DEV Environment
          path: previous-allure-results
          if_no_artifact_found: ignore

      # üß† Merge previous results
      - name: Merge previous allure-results
        run: |
          mkdir -p allure-results
          if [ -d "previous-allure-results" ]; then
            cp -r previous-allure-results/* allure-results/ || echo "No previous results found."
          fi

      # ‚ñ∂Ô∏è Ejecutar tests
      - name: Run tests scripts directly
        if: always()
        run: |
          poetry run pytest QAAppAllure.py -n auto -s -v --reruns 3 --alluredir=allure-results

      # üõ†Ô∏è Generar reporte Allure (mezclando viejo y nuevo)
      - name: Generate Allure Report
        if: always()
        run: |
          npm install -g allure-commandline --save-dev
          allure generate allure-results -o allure-report --clean

      # üì¶ Subir allure-results para el siguiente run
      - name: Upload Allure raw results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

      # üì¶ Subir reporte generado
      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      # üîÑ Crear index.html para redirect
      - name: Create index.html for latest report
        if: always()
        run: |
          mkdir temp_deploy
          echo '<!DOCTYPE html>' > temp_deploy/index.html
          echo '<html>' >> temp_deploy/index.html
          echo '  <head>' >> temp_deploy/index.html
          echo '    <meta http-equiv="refresh" content="0; url=${{ github.run_number }}/" />' >> temp_deploy/index.html
          echo '    <title>Redirecting to Latest Allure Report</title>' >> temp_deploy/index.html
          echo '  </head>' >> temp_deploy/index.html
          echo '  <body>' >> temp_deploy/index.html
          echo '    <p>Redirecting to the latest report...</p>' >> temp_deploy/index.html
          echo '    <p>If you are not redirected automatically, <a href="${{ github.run_number }}/">click here</a>.</p>' >> temp_deploy/index.html
          echo '  </body>' >> temp_deploy/index.html
          echo '</html>' >> temp_deploy/index.html

      # üöÄ Deploy Allure Report al subfolder del run
      - name: Deploy Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PERSONAL_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-report
          destination_dir: ${{ github.run_number }}
          user_name: github-actions
          user_email: github-actions@github.com
          enable_jekyll: false
          keep_files: true

      # üöÄ Deploy index.html al root para redirect
      - name: Deploy index.html to GitHub Pages Root
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PERSONAL_TOKEN }}
          publish_branch: gh-pages
          publish_dir: temp_deploy
          destination_dir: .
          user_name: github-actions
          user_email: github-actions@github.com
          enable_jekyll: false
          keep_files: true

      # üîó Mostrar URL del reporte
      - name: Provide Allure Report URL
        if: always()
        run: |
          echo "Allure Report URL: https://${{ github.repository_owner }}.github.io/${{ github.repository }}/${{ github.run_number }}"


