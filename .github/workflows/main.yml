name: Main Event Workflow â€” DEV Environment

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  TEST_EXECUTION_ENV: dev

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Poetry and dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry install --no-root

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)/App" >> $GITHUB_ENV

      - name: Run tests scripts directly
        run: |
          poetry run pytest -s -v --reruns 3 --alluredir=allure-results
          
      - name: Generate .config.yaml with data
        env:
          DEV_SUPERUSER_EMAIL: ${{ vars.DEV_SUPERUSER_EMAIL }}
          DEV_SUPERUSER_PASSWORD: ${{ vars.DEV_SUPERUSER_PASSWORD }}
        run: |
          poetry run python generate_config.py

      - name: Executing tests.
        run: |
          echo "Starting regression testing on "$TEST_EXECUTION_ENV" environment..."
          poetry run python -m pytest -s -v --reruns 3 --env=$TEST_EXECUTION_ENV --alluredir=allure-results

      - name: Get Allure history.
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action from marketplace.
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history

      - name: Upload Allure raw results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
    

      - name: Deploy report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v2
        with:
          personal_token: ${{ secrets.PERSONAL_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-reports

      - name: Set current date as env variable.
        run: |
          echo "event_name=${GITHUB_EVENT_NAME}" >> $GITHUB_ENV
          echo "workflow=${GITHUB_WORKFLOW}" >> $GITHUB_ENV
          echo "actor=${GITHUB_ACTOR}" >> $GITHUB_ENV
          echo "run_number=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
        

      - name: Send email notification.
        env:
          EMAIL_SENDER: ${{ secrets.MAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          EMAIL_RECEIVERS: ${{ secrets.EMAIL_RECEIVERS }}
          ENV: DEV
          RUN_NUMBER: ${{ env.run_number }}
          EVENT_NAME: ${{ env.event_name }}
          WORKFLOW: ${{ env.workflow }}
          ACTOR: ${{ env.actor }}
        run: |
          poetry run python send_notification.py
            -- name: Send Slack notification.

    
